name: Test and Publish

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  tests:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Required to retrieve git history
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Node-modules cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: install
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: postinstall
        if: steps.node-cache.outputs.cache-hit == 'true'
        run: yarn postinstall
      - name: Boot
        run: yarn boot
      - name: Eslint and Stylelint
        run: yarn lint
      - name: add access token to .env
        run: echo "ACCESS_TOKEN=${{ secrets.VERKTOYKASSE_INNHOLD_TOKEN }}" >> website/.env
      - name: add branch token to .env
        run: echo "BRANCH=HEAD" >> website/.env
      - name: Test gatsby-build (design.nav.no)
        run: yarn build:gatsby

  publish-npm:
    needs: tests
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION }}
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[fix]') || contains(github.event.head_commit.message, '[feature]') || contains(github.event.head_commit.message, '[breaking]')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
          token: ${{secrets.GITHUB_TOKEN}}
      - uses: actions/setup-node@v2
        with:
          registry-url: https://registry.npmjs.org
          node-version: 14
      - name: Node-modules cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: install
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Boot
        run: yarn boot
      - name: Setup github connection for auth
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git remote set-url origin https://github-actions[bot]:$NAV_DS_TOKEN@github.com/$GITHUB_REPOSITORY.git
        env:
          NAV_DS_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Update changed packages with PATCH
        if: "contains(github.event.head_commit.message, '[fix]')"
        run: yarn lerna version patch --include-merged-tags --yes
      - name: Update changed packages with MINOR
        if: "contains(github.event.head_commit.message, '[feature]')"
        run: yarn lerna version minor --include-merged-tags --yes
      - name: Update changed packages with MAJOR
        if: "contains(github.event.head_commit.message, '[breaking]')"
        run: yarn lerna version major --include-merged-tags --yes
      - name: Publish to NPM registry
        run: yarn lerna publish --no-verify-access from-package --yes

  publish-website:
    needs: tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-args: "--prod" #Optional
          vercel-org-id: ${{ secrets.ORG_ID}} #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required
          working-directory: ./
